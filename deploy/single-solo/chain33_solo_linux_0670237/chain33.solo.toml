Title="local"
version="1.65.2-0670237"
# 是否按照块高度设置过期时间，开启后优化了交易去重性能
TxHeight=true

[log]
# 日志级别，支持debug(dbug)/info/warn/error(eror)/crit
loglevel = "info"
logConsoleLevel = "info"
# 日志文件名，可带目录，所有生成的日志文件都放到此目录下
logFile = "logs/chain33.log"
# 单个日志文件的最大值（单位：兆）
maxFileSize = 300
# 最多保存的历史日志文件个数
maxBackups = 100
# 最多保存的历史日志消息（单位：天）
maxAge = 28
# 日志文件名是否使用本地事件（否则使用UTC时间）
localTime = true
# 历史日志文件是否压缩（压缩格式为gz）
compress = true
# 是否打印调用源文件和行号
callerFile = false
# 是否打印调用方法
callerFunction = false

[blockchain]
# 缓存区块的个数
defCacheSize=128
# 同步区块时一次最多申请获取的区块个数
maxFetchBlockNum=128
# 向对端节点请求同步区块的时间间隔
timeoutSeconds=5
batchBlockNum=128
driver="leveldb"
dbPath="datadir"
dbCache=128
isStrongConsistency=false
# 是否为单节点模式
singleMode=true
# 同步区块批量写数据库时，是否需要立即写磁盘，非固态硬盘的电脑可以设置为false，以提高性能
batchsync=false
# 是否记录添加或者删除区块的序列，若节点作为主链节点，为平行链节点提供服务，需要设置为true
isRecordBlockSequence=true
# 是否为平行链节点
isParaChain=false
# 是否开启交易快速查询索引
enableTxQuickIndex=true
# 是否开启精简localdb
enableReExecLocal=false
enablePushSubscribe=true
# 对端节点只比自己高一个区块，等待超时后，同步该区块
onChainTimeout=30
# 是否关闭区块广播
disableBlockBroadcast=true

[p2p]
# 配置p2p网络类型，dht,gossip两种
types=["gossip"]
dbPath="datadir/addrbook"
dbCache=4
grpcLogFile="grpc33.log"
#waitPid 等待seed导入
waitPid=false
# 是否启动P2P服务
enable=true
driver="leveldb"

[p2p.sub.gossip]
port=13802
seeds=[]
isSeed=false
innerSeedEnable=false
useGithub=false
innerBounds=300
channel=5288
serverStart=true

[rpc]
jrpcBindAddr=":8801"
grpcBindAddr=":8802"
whitelist=["*"]
jrpcFuncWhitelist=["*"]
grpcFuncWhitelist=["*"]


[mempool]
name="timeline"
poolCacheSize=202400
disableExecCheck=true
#minTxFeeRate=100000

[consensus]
name="solo"
minerstart=true

[mver.consensus]
fundKeyAddr = "1BQXS6TxaYYG5mADaWij4AxhZZUTpw95a5"
powLimitBits="0x1f00ffff"
maxTxNumber = 50000     #160

[mver.consensus.ForkChainParamV1]
maxTxNumber = 50000

[mver.consensus.ForkTicketFundAddrV1]
fundKeyAddr = "1Ji3W12KGScCM7C2p8bg635sNkayDM8MGY"

[consensus.sub.solo]
genesis="14KEKbYtKKQm4wMthSK9J4La4nAiidGozt"
genesisBlockTime=1514533394

[store]
name="kvmvcc"
driver="leveldb"
dbPath="datadir/kvmvcc"
dbCache=128

[store.sub.kvmvcc]
enableMavlPrefix=false
enableMVCC=false

[wallet]
minFee=100000
driver="leveldb"
dbPath="datadir/wallet"
dbCache=16
signType="secp256k1"

[wallet.sub.ticket]
minerdisable=true
minerwhitelist=["*"]

[wallet.sub.multisig]
rescanMultisigAddr=false

[exec]
#isFree=true
#minExecFee=0
enableStat=false
enableMVCC=false
alias=["token1:token","token2:token","token3:token"]
saveTokenTxList=false

[exec.sub.manage]
superManager=["14KEKbYtKKQm4wMthSK9J4La4nAiidGozt"]

[exec.sub.token]
saveTokenTxList=true
tokenApprs=[]

[exec.sub.cert]
# 是否启用证书验证和签名
enable=false
# 加密文件路径
cryptoPath="authdir/crypto"
# 带证书签名类型，支持"auth_ecdsa", "auth_sm2"
signType="auth_ecdsa"

[exec.sub.relay]
genesis="12qyocayNF7Lv6C9qW4avxs2E7U41fKSfv"

[exec.sub.paracross]
nodeGroupFrozenCoins=0
#平行链共识停止后主链等待的高度
paraConsensusStopBlocks=30000

[exec.sub.autonomy]
total="16htvcBNSEA7fZhAdLJphDwQRQJaHpyHTp"
useBalance=false

[fork.sub.storage]
Enable=0

[fork.sub.evm]
Enable=0

[metrics]
#是否使能发送metrics数据的发送
enableMetrics=false
#数据保存模式
dataEmitMode="influxdb"

[metrics.sub.influxdb]
#以纳秒为单位的发送间隔
duration=1000000000
url="http://influxdb:8086"
database="chain33metrics"
username=""
password=""
namespace=""

[pprof]
listenAddr=":6060"

